package nel.marco;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

import java.util.ArrayList;
import java.util.List;

public class Problem2 {

    public static void main(String[] args) {
        new Problem2();
    }


    public Problem2() {

        List<Long> fibonacci = new ArrayList<>();

        fibonacci.add(1L);
        fibonacci.add(1L);


        long nextNumber = fibonacci.get(fibonacci.size() - 1) + fibonacci.get(fibonacci.size() - 2);
        long total = 0;
        while (nextNumber < 4_000_000L) {

            if (nextNumber % 2 == 0) {
                total += nextNumber;
            }

            fibonacci.add(fibonacci.get(fibonacci.size() - 1) + fibonacci.get(fibonacci.size() - 2));
            nextNumber = fibonacci.get(fibonacci.size() - 1) + fibonacci.get(fibonacci.size() - 2);
        }

        System.out.println("answer = " + total);


    }
}
